---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.3/service.json
kind: Service
apiVersion: v1
metadata:
  name: remote-internal-kvm2
  namespace: network
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
      name: http
  type: ExternalName
  externalName: pikvm.rack.home.internal
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.3/ingress.json
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: remote-internal-kvm2
  namespace: network
  annotations:
    error-pages.home.arpa/enabled: "true"
    authentik.home.arpa/enabled: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host pikvm.rack.home.internal;
    gethomepage.dev/enabled: "true"
    gethomepage.dev/name: "kvm2"
    gethomepage.dev/description: "PiKVM Management Interface"
    gethomepage.dev/href: "https://kvm2.${SECRET_DOMAIN}"
    gethomepage.dev/group: "Infrastructure"
    gethomepage.dev/icon: "pikvm.png"
    gethomepage.dev/siteMonitor: https://pikvm.rack.home.internal:443
spec:
  ingressClassName: internal
  rules:
    - host: "kvm2.${SECRET_DOMAIN}"
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: remote-internal-kvm2
              port:
                number: 80
  tls:
    - hosts:
        - "kvm2.${SECRET_DOMAIN}"
      secretName: "${SECRET_DOMAIN/./-}-production-tls"
