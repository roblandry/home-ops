# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/tags/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app blocky-frontend
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      blocky-frontend:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/mozart409/blocky-frontend
              tag: v0.2.2
            env:
              - name: API_URL
                value: http://blocky.network.svc.cluster.local:4000
              - name: NODE_ENV
                value: production
            probes:
              liveness: &probes
                enabled: false
              readiness: *probes
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8002
    ingress:
      app:
        className: internal
        annotations:
          # external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          # error-pages.home.arpa/enabled: "true"
          gethomepage.dev/app: *app
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Blocky Frontend"
          gethomepage.dev/description: "A lightweight, network-wide DNS proxy and ad-blocker designed to run on local networks, written in Go"
          gethomepage.dev/href: "https://blocky.${SECRET_DOMAIN}"
          gethomepage.dev/group: "Services"
          gethomepage.dev/icon: "sh-blocky.png"
        hosts:
          - host: &host "blocky.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      srv-env:
        enabled: true
        type: configMap
        name: blocky-frontend
        advancedMounts:
          blocky-frontend:
            app:
              - path: "/srv/.env"
                readOnly: true
                subPath: env
              - path: "/app/.env"
                readOnly: true
                subPath: env
              - path: "/root/.env"
                readOnly: true
                subPath: env
    serviceAccount:
      create: true
      name: *app
    serviceMonitor:
      app:
        enabled: false
        serviceName: *app
