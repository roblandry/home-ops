---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/tags/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app blocky-ui
  namespace: network
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      blocky-ui:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: gabrielduartem/blocky-ui
              tag: 1.0.4@sha256:fd6491df36c69d3350862c2f58b1b6c00fd1620e07159b7c837b1b76a17250d1
            env:
              - name: BLOCKY_API_URL
                value: http://blocky.network.svc.cluster.local:4000
            probes:
              liveness: &probes
                enabled: false
              readiness: *probes
    service:
      app:
        controller: *app
        ports:
          http:
            port: 3000
    ingress:
      app:
        className: internal
        annotations:
          # external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          # error-pages.home.arpa/enabled: "true"
          gethomepage.dev/app: *app
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Blocky UI"
          gethomepage.dev/description: "A modern web interface for managing and controlling your Blocky DNS server."
          gethomepage.dev/href: "https://blockyui.${SECRET_DOMAIN}"
          gethomepage.dev/group: "Services"
          gethomepage.dev/icon: "sh-blocky.png"
        hosts:
          - host: &host "blockyui.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"

    # serviceAccount:
    #   create: true
    #   name: *app
    # serviceMonitor:
    #   app:
    #     enabled: false
    #     serviceName: *app
