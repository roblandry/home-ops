# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: traefik-dashboard
#   namespace: network
#   annotations:
#     cert-manager.io/cluster-issuer: "letsencrypt-production"
#     hajimari.io/appName: "traefik"
#     hajimari.io/enable: "true"
#     hajimari.io/icon: "web"
#     hajimari.io/instance: "monitor"
#     traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
# spec:
#   ingressClassName: "traefik"
#   tls:
#     - hosts:
#         - "traefik.${SECRET_DOMAIN}"
#       secretName: "${SECRET_DOMAIN/./-}-production-tls"
#       namespace: cert-manager
#   rules:
#     - host: "traefik.${SECRET_DOMAIN}"
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: traefik
#                 port:
#                   number: 9000
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
spec:
  routes:
  - match: "Host(`traefik.${SECRET_DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
    kind: Rule
    services:
    - name: api@internal
      kind: TraefikService
    # middlewares:
    #   - name: auth

  tls:
    secretName: "${SECRET_DOMAIN}-production-tls"
    # namespace: cert-manager
    options:
      name: "${SECRET_DOMAIN}-production-tls"
      namespace: cert-manager

# ---
# apiVersion: traefik.io/v1alpha1
# kind: Middleware
# metadata:
#   name: auth
# spec:
#   basicAuth:
#     secret: secretName # Kubernetes secret named "secretName"
