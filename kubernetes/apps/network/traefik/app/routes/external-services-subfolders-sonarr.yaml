---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.3/endpoints.json
apiVersion: v1
kind: Endpoints
metadata:
  name: sonarr
  namespace: network
subsets:
  - addresses:
      - ip: ${SETTINGS_NAS_IP}
    ports:
      - port: 8989
        protocol: TCP
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.3/service.json
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  namespace: network
spec:
  ports:
    - name: http
      port: 8989
      targetPort: 8989
  clusterIP: None
  # selector: {}
  # type: ClusterIP
# ---
# # yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.3/service.json
# kind: Service
# apiVersion: v1
# metadata:
#   name: sonarr
# spec:
#   type: ExternalName
#   ports:
#     - name: http
#       port: 8989
#       targetPort: 8989
#   externalName: ${SETTINGS_NAS_IP}
---
# yaml-language-server: $schema=https://json.schemastore.org/traefik-v3.json
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: sonarr-ingress
  namespace: network
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`apps.${SECRET_DOMAIN}`) && PathPrefix(`/sonarr`)
      kind: Rule
      services:
        - name: sonarr
          port: 8989
      middlewares:
        - name: internal-auth-middlewares
        # - name: sonarr-addprefix
  tls:
    secretName: "${SECRET_DOMAIN/./-}-production-tls"
# ---
# apiVersion: traefik.io/v1alpha1
# kind: Middleware
# metadata:
#   name: sonarr-addprefix
# spec:
#   addPrefix:
#     prefix: /sonarr
