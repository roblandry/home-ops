---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/tags/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app opengist
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      opengist:
        annotations:
          secret.reloader.stakater.com/reload: &secret opengist-secrets
        # initContainers:
        #   00-chown-data:
        #     image:
        #       repository: busybox
        #       tag: latest
        #     command:
        #       - sh
        #       - -c
        #       - |
        #         # rm -rf /var/lib/opengist
        #         chown -R 1000:1000 /mnt/opengist
        #     securityContext:
        #       runAsUser: 0
        #       allowPrivilegeEscalation: true
        #   01-init-db:
        #     image:
        #       repository: ghcr.io/onedr0p/postgres-init
        #       tag: 16
        #       pullPolicy: IfNotPresent
        #     envFrom:
        #       - secretRef:
        #           name: *secret
        strategy: Recreate
        containers:
          opengist:
            image:
              repository: ghcr.io/thomiceli/opengist
              tag: 1.10.0@sha256:b3ae8c4614fcfc3099ed08317f0113444f314d3d390e89161cff9b673729d191
              pullPolicy: IfNotPresent
            command: # double "$$" escape flux substitutions
              - ./opengist
            args:
              - --config
              - /mnt/config.yml
            securityContext:
              allowPrivilegeEscalation: false
              # mkdir: can't create directory '/tmp/opengist': Read-only file system
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 300Mi
              limits:
                memory: 600Mi
    service:
      opengist:
        controller: *app
        ports:
          http:
            port: 6157
      # ssh:
      #   enabled: true
      #   type: LoadBalancer
      #   controller: *app
      #   externalTrafficPolicy: Local
      #   loadBalancerIP: 10.0.10.111
      #   ports:
      #     ssh:
      #       enabled: true
      #       port: 22
      #       targetPort: 2222
      #       protocol: TCP
    ingress:
      opengist:
        enabled: true
        className: internal
        annotations:
          # external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          # error-pages.home.arpa/enabled: "true"
          # authentik.home.arpa/enabled: "true"
          gethomepage.dev/app: *app
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: *app
          gethomepage.dev/description: "An open-source, self-hosted pastebin service that functions as an alternative to GitHub Gist."
          gethomepage.dev/href: "https://gist.${SECRET_DOMAIN}"
          gethomepage.dev/group: "Dev"
          gethomepage.dev/icon: "opengist.png"
        hosts:
          - host: &host "gist.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: *app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      config:
        type: configMap
        name: *app
        globalMounts:
          - subPath: config.yml
            path: /mnt/config.yml
        defaultMode: 0775
      data:
        existingClaim: *app
        globalMounts:
          - path: /mnt/opengist
