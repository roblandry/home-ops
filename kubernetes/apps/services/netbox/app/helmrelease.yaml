---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: netbox
  namespace: services
spec:
  interval: 1h
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 6.0.18
  url: oci://ghcr.io/netbox-community/netbox-chart/netbox
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app netbox
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: netbox
    namespace: services
  values:
    podAnnotations:
      reloader.stakater.com/auto: "true"
      secret.reloader.stakater.com/reload: &secret netbox-secrets
    superuser:
      name: bigrob8181
      email: server.netbox@${SECRET_DOMAIN}
    admins:
      - ["bigrob8181", "server.netbox@${SECRET_DOMAIN}"]
    loginRequired: true
    timeZone: ${TIMEZONE}
    dateFormat: "j. F, Y"
    shortDateFormat: "j.m.Y"
    timeFormat: "G:i"
    shortTimeFormat: "H:i:s"
    dateTimeFormat: "j. F, Y g:i a"
    shortDateTimeFormat: "j.m.Y H:i"
    storages:
      default:
        BACKEND: "storages.backends.s3.S3Storage"
        OPTIONS:
          AWS_STORAGE_BUCKET_NAME: "netbox"
          AWS_S3_ENDPOINT_URL: "http://rook-ceph-rgw-ceph-objectstore.rook-ceph.svc"
          # AWS_S3_REGION_NAME: "us-east-1"
    existingSecret: *secret
    metricsEnabled: true
    postgresql:
      enabled: false
    valkey:
      enabled: false
    tasksDatabase:
      host: dragonfly.database.svc.cluster.local
      database: 3
      # existingSecretName: *secret
      # existingSecretKey: "REDIS_PASSWORD"
    cachingDatabase:
      host: dragonfly.database.svc.cluster.local
      database: 4
      # existingSecretName: *secret
      # existingSecretKey: "REDIS_PASSWORD"
    externalDatabase:
      host: postgres-16-rw.database.svc.cluster.local
      port: 5432
      database: netbox
      username: netbox
      existingSecretName: *secret
      existingSecretKey: "NETBOX_PG_PASS"
    email:
      existingSecretName: *secret
    #   server: smtp-relay.networking.svc.cluster.local
    #   port: 2525
    #   from: netbox@${SECRET_DOMAIN}
    persistence:
      enabled: false
    readinessProbe:
      enabled: true
      initialDelaySeconds: 60
      timeoutSeconds: 1
      periodSeconds: 10
      successThreshold: 1
    commonLabels:
      teleport: enabled
    service:
      annotations:
        teleport.dev/name: *app
    ingress:
      enabled: true
      className: internal
      # annotations:
        # external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
      hosts:
        - host: &host "netbox.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: netbox
                  port:
                    number: 80
      tls:
        - hosts:
            - *host
          secretName: "${SECRET_DOMAIN/./-}-production-tls"
    extraConfig:
      - secret:
          secretName: *secret
    housekeeping:
      enabled: false
    worker:
      enabled: false
  valuesFrom:
    - targetPath: storages.default.OPTIONS.AWS_ACCESS_KEY_ID
      kind: Secret
      name: *secret
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: storages.default.OPTIONS.AWS_SECRET_ACCESS_KEY
      kind: Secret
      name: *secret
      valuesKey: AWS_SECRET_ACCESS_KEY
