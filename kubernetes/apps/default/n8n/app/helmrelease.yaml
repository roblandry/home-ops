---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/tags/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: n8n
  namespace: default
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  interval: 30m
  values:
    controllers:
      main:
        annotations:
          secret.reloader.stakater.com/reload: "n8n-secret, n8n-login-secret"
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 17.4
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: n8n-secret
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          main:
            image:
              repository: ghcr.io/n8n-io/n8n
              tag: 1.101.1
            command: ["n8n"]
            env:
              GENERIC_TIMEZONE: ${CONFIG_TIMEZONE}
              DB_TYPE: postgresdb
              N8N_HOST: n8n.${SECRET_DOMAIN}
              N8N_EDITOR_BASE_URL: https://n8n.${SECRET_DOMAIN}/
              WEBHOOK_URL: https://n8n.${SECRET_DOMAIN}/
              N8N_PORT: &port 80
              N8N_PROTOCOL: https
              N8N_USER_FOLDER: /config
              N8N_EMAIL_MODE: smtp
              N8N_VERSION_NOTIFICATIONS_ENABLED: false
              N8N_DIAGONISTICS_ENABLED: false
              N8N_HIRING_BANNER_ENABLED: false
              N8N_BASIC_AUTH_ACTIVE: true
            envFrom:
              - secretRef:
                  name: n8n-secret
              - secretRef:
                  name: n8n-login-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 100m
                memory: 200Mi
              limits:
                memory: 1000Mi

    persistence:
      config:
        enabled: true
        existingClaim: n8n
        # accessMode: ReadWriteMany
        # size: 5Gi
        # storageClass: ceph-filesystem

    service:
      main:
        controller: main
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          error-pages.home.arpa/enabled: "true"
          gethomepage.dev/app: "n8n"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "n8n"
          gethomepage.dev/description: "An extendable workflow automation tool"
          gethomepage.dev/href: "https://n8n.${SECRET_DOMAIN}"
          gethomepage.dev/group: "Automation"
          gethomepage.dev/icon: "sh-n8n.png"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
