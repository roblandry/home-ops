---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.33.3/cronjob.json
apiVersion: batch/v1
kind: CronJob
metadata:
  name: &name cnpg-backblaze
  namespace: utilities
  labels:
    app.kubernetes.io/name: *name
    job-type: backup
spec:
  schedule: "0 1 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: *name
            job-type: backup
        spec:
          containers:
            - name: rclone
              image: rclone/rclone:latest
              command: ["/bin/sh", "-c"]
              args:
                - |-
                  set -euo pipefail

                  echo "Installing curl and jq..."
                  apk add --no-cache curl jq

                  export RCLONE_CONFIG=/config/rclone.conf

                  echo "Starting rclone rcd..."
                  rclone rcd \
                    --rc-addr=localhost:5573 \
                    --rc-enable-metrics \
                    --log-level INFO \
                    --stats 10s \
                    --rc-no-auth \
                    --rc-web-gui=false &

                  pid=$!

                  echo "Sleeping briefly to let rclone rcd start..."
                  sleep 5

                  echo "Starting rclone sync via RC API..."
                  curl -s -X POST http://localhost:5573/sync/sync \
                    -H "Content-Type: application/json" \
                    -d '{
                      "srcFs": "ceph:cnpg-bucket/",
                      "dstFs": "b2-crypt:",
                      "createEmptySrcDirs": true,
                      "copyLinks": true,
                      "fastList": true,
                      "checkFirst": true
                    }'

                  echo "Polling for sync to complete..."
                  while true; do
                    stats=$(curl -s -X POST http://localhost:5573/core/stats)
                    transfers=$(echo "$stats" | jq '.transfers')
                    totalTransfers=$(echo "$stats" | jq '.totalTransfers')
                    bytes=$(echo "$stats" | jq '.bytes')
                    totalBytes=$(echo "$stats" | jq '.totalBytes')

                    echo "üåÄ transfers: $transfers / $totalTransfers ‚Äî bytes: $bytes / $totalBytes"

                    if [ "$transfers" -eq "$totalTransfers" ] && [ "$bytes" -eq "$totalBytes" ]; then
                      break
                    fi

                    sleep 10
                  done

                  echo "Pushing metrics to Prometheus Pushgateway..."
                  if ! curl --max-time 5 -s http://localhost:5573/metrics \
                    | curl --max-time 5 --data-binary @- http://prometheus-pushgateway.monitor.svc.cluster.local:9091/metrics/job/cnpg-backblaze; then
                    echo "‚ö†Ô∏è  Failed to push metrics to Pushgateway"
                  fi

                  echo "Killing rclone daemon..."
                  kill $pid
                  echo "‚úÖ rclone sync and metrics push complete"
              env:
                - name: RCLONE_CONFIG
                  value: /config/rclone.conf
              volumeMounts:
                - name: config
                  mountPath: /config
          restartPolicy: OnFailure
          volumes:
            - name: config
              secret:
                secretName: cnpg-rclone-config
