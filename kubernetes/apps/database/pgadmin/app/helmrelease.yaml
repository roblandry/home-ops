---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/tags/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pgadmin
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      pgadmin:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: dpage/pgadmin4
              tag: "9.8"
            env:
              PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
              PGADMIN_DISABLE_POSTFIX: "true"
              PGADMIN_LISTEN_PORT: &port 80
              PGADMIN_DEFAULT_EMAIL:
                valueFrom:
                  secretKeyRef:
                    name: pgadmin-secret
                    key: PGADMIN_DEFAULT_EMAIL
              PGADMIN_DEFAULT_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: pgadmin-secret
                    key: PGADMIN_DEFAULT_PASSWORD
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /misc/ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 500Mi
    defaultPodOptions:
      securityContext:
        runAsUser: 5050
        runAsGroup: 5050
        fsGroup: 5050
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          error-pages.home.arpa/enabled: "true"
          # authentik.home.arpa/enabled: "true"
          gethomepage.dev/app: *app
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "PGAdmin (PostgreSQL)"
          gethomepage.dev/description: "A web-based database management tool for PostgreSQL"
          gethomepage.dev/href: "https://pgadmin.${SECRET_DOMAIN}"
          gethomepage.dev/group: "Services"
          gethomepage.dev/icon: si-postgresql
        hosts:
          - host: &host "pgadmin.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      config:
        storageClass: ceph-block
        accessMode: ReadWriteOnce
        size: 1Gi
        globalMounts:
          - path: /var/lib/pgadmin
      server-json:
        type: configMap
        name: pgadmin-configmap
        globalMounts:
          - path: /pgadmin4/servers.json
            subPath: servers.json
      # pgpass:
      #   type: secret
      #   name: pgadmin-secret
      #   globalMounts:
      #     - path: /pgadmin4/pgpass
      #       subPath: pgpass
