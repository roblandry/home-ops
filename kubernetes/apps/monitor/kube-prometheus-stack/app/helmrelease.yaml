---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 75.11.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  interval: 30m
  install:
    crds: Skip
  maxHistory: 3
  upgrade:
    crds: Skip
  uninstall:
    keepHistory: false
  valuesFrom:
    - kind: ConfigMap
      name: kube-state-metrics-config
      valuesKey: kube-state-metrics.yaml
  values:
    crds:
      enabled: false
    cleanPrometheusOperatorObjectNames: true
    # kubeApiServer:
    #   serviceMonitor:
    #     selector:
    #       k8s-app: kube-apiserver
    # kubeScheduler:
    #   service:
    #     selector:
    #       k8s-app: kube-scheduler
    # kubeControllerManager: &kubeControllerManager
    #   service:
    #     selector:
    #       k8s-app: kube-controller-manager
    kubeEtcd:
      service:
        selector:
          component: kube-apiserver # etcd runs on control plane nodes
    kubeProxy:
      enabled: false
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: [__meta_kubernetes_pod_node_name]
              targetLabel: kubernetes_node
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: [__meta_kubernetes_pod_node_name]
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: false

    alertmanager:
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - &host1 "alerts.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host1
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
      alertmanagerSpec:
        alertmanagerConfiguration:
          name: alertmanager
          global:
            resolveTimeout: 5m
          selector:
            matchLabels:
              alertmanagerConfig: enabled

    prometheus:
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          error-pages.home.arpa/enabled: "true"
          authentik.home.arpa/enabled: "true"
          gethomepage.dev/app: "prometheus"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Prometheus"
          gethomepage.dev/description: "A powerful monitoring and alerting toolkit"
          gethomepage.dev/href: "https://prometheus.${SECRET_DOMAIN}"
          gethomepage.dev/group: "Kubernetes"
          gethomepage.dev/icon: "sh-prometheus.png"
        hosts:
          - &host2 "prometheus.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host2
            secretName: "${SECRET_DOMAIN/./-}-production-tls"

      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "__replica__"
        scrapeInterval: 30s
        podAntiAffinity: hard
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enabledFeatures:
          - memory-snapshot-on-shutdown
        retention: 2d
        retentionSize: 6GB
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 10Gi
        thanos:
          image: quay.io/thanos/thanos:v0.39.1
          objectStorageConfig:
            existingSecret:
              name: thanos-objectstore-secret
              key: objstore.yaml
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
