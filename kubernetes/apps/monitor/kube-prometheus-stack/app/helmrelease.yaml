---
# yaml-language-server: $schema=https://crd.movishell.pl/source.toolkit.fluxcd.io/helmrepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: monitor
spec:
  url: https://prometheus-community.github.io/helm-charts
  interval: 1h
  timeout: 3m
---
# yaml-language-server: $schema=https://crd.movishell.pl/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 70.3.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitor
  interval: 30m
  install:
    crds: Skip
  maxHistory: 3
  upgrade:
    crds: Skip
  uninstall:
    keepHistory: false
  valuesFrom:
    - kind: ConfigMap
      name: kube-state-metrics-config
      valuesKey: kube-state-metrics.yaml
  values:
    crds:
      enabled: false
    cleanPrometheusOperatorObjectNames: true
    kubeApiServer:
      serviceMonitor:
        selector:
          k8s-app: kube-apiserver
    kubeScheduler:
      service:
        selector:
          k8s-app: kube-scheduler
    kubeControllerManager: &kubeControllerManager
      service:
        selector:
          k8s-app: kube-controller-manager
    kubeEtcd:
      <<: *kubeControllerManager # etcd runs on control plane nodes
    kubeProxy:
      enabled: false
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: [__meta_kubernetes_pod_node_name]
              targetLabel: kubernetes_node
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: [__meta_kubernetes_pod_node_name]
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: false
      # sidecar:
      #   dashboards:
      #     annotations:
      #       grafana_folder: Kubernetes
      #     multicluster:
      #       etcd:
      #         enabled: true
    # alertmanager:
    #   ingress:
    #     enabled: true
    #     ingressClassName: private
    #     annotations:
    #       gethomepage.dev/enabled: "true"
    #       gethomepage.dev/group: Infrastructure
    #       gethomepage.dev/name: Alert Manager
    #       gethomepage.dev/icon: alertmanager.svg
    #       gethomepage.dev/pod-selector: app.kubernetes.io/name=alertmanager
    #     hosts: ["alerts.${SECRET_DOMAIN}"]
    #   alertmanagerSpec:
    #     alertmanagerConfiguration:
    #       name: alertmanager
    #       global:
    #         resolveTimeout: 5m
    #     storage:
    #       volumeClaimTemplate:
    #         spec:
    #           storageClassName: csi-driver-nfs
    #           resources:
    #             requests:
    #               storage: 1Gi
    prometheus:
      # ingress:
      #   enabled: true
      #   ingressClassName: traefik
      #   annotations:
      #     gethomepage.dev/enabled: "true"
      #     gethomepage.dev/group: Infrastructure
      #     gethomepage.dev/name: Prometheus
      #     gethomepage.dev/icon: prometheus.svg
      #     gethomepage.dev/pod-selector: app.kubernetes.io/name=prometheus
      #     gethomepage.dev/widget.type: prometheus
      #     gethomepage.dev/widget.url: http://kube-prometheus-stack-prometheus.monitor:9090
      #   pathType: Prefix
      #   hosts: ["promethius.${SECRET_DOMAIN}"]
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "__replica__"
        scrapeInterval: 30s
        podAntiAffinity: hard
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enabledFeatures:
          - memory-snapshot-on-shutdown
        retention: 2d
        retentionSize: 6GB
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: data-nfs
              resources:
                requests:
                  storage: 10Gi
        thanos:
          image: quay.io/thanos/thanos:v0.37.2
          objectStorageConfig:
            existingSecret:
              name: thanos-objectstore-secret
              key: objstore.yaml
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
