---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrepository-source-v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: grafana
  namespace: monitor
spec:
  type: oci
  url: oci://ghcr.io/grafana/helm-charts
  interval: 1h
  timeout: 3m
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app grafana
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 10.1.0
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: monitor
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    annotations:
      secret.reloader.stakater.com/reload: &secret grafana-secret
    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-init:16
        envFrom:
          - secretRef:
              name: *secret
    replicas: 1
    envFromSecrets:
      - name: *secret
    env:
      # No telemetry
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES: false
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_DATE_FORMATS_FULL_DATE: "DD/MM/YYYY hh:mm:ss"
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_SECURITY_COOKIE_SAMESITE: grafana
      VAR_BLOCKY_URL: "http://blocky.network.svc.cluster.local:4000"
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth:
        disable_login_form: true
        disable_signout_menu: true
      auth.anonymous:
        enabled: true
        org_name: Main Org.
        org_role: Admin
      news:
        news_feed_enabled: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: homelab
            orgId: 1
            folder: Homelab
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/homelab
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: networking
            orgId: 1
            folder: Networking
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/networking
          - name: storage
            orgId: 1
            folder: Storage
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/storage
          - name: unifi
            orgId: 1
            folder: Unifi
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/unifi
          - name: logs
            orgId: 1
            folder: Logs
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/logs
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Prometheus
            orgId: 1
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://thanos-query.monitor.svc.cluster.local:10902/
            jsonData:
              prometheusType: Thanos
              timeInterval: 1m
            isDefault: true
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-gateway.monitor.svc.cluster.local
            jsonData:
              maxLines: 250
          # - name: Alertmanager
          #   type: alertmanager
          #   uid: alertmanager
          #   access: proxy
          #   url: http://alertmanager-operated.observability.svc.cluster.local:9093
          #   jsonData:
          #     implementation: prometheus
    isDefault: true
    dashboards:
      default:
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        node-exporter-full-with-node-name:
          # renovate: depName="Node Exporter Full with Node Name"
          gnetId: 10242
          revision: 1
          datasource: Prometheus
        proxmox-prometheus: # --- NO DATA --- #
          # renovate: depName="Proxmox via Prometheus"
          gnetId: 10347
          revision: 5
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
      networking:
        blackbox-exporter:
          # renovate: depName="Blackbox Exporter"
          gnetId: 16124
          revision: 4
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        blocky:
          # renovate: depName="blocky4"
          gnetId: 13768
          revision: 6
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
        speedtest-exporter: # --- NO DATA --- #
          # renovate: depName="Speedtest Exporter"
          gnetId: 13665
          revision: 4
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
      storage:
        dragonfly:
          url: https://raw.githubusercontent.com/dragonflydb/dragonfly-operator/refs/heads/main/monitoring/grafana-dashboard.json
          datasource: Prometheus
        openebs:
          # renovate: depName="1 OpenEBS Dashboard"
          gnetId: 12171
          revision: 2
          datasource: Prometheus
        volsync:
          # renovate: depName="Volsync"
          gnetId: 21356
          revision: 3
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
            - { name: VAR_REPLICATIONDESTNAME, value: ".*-rdst" }
        ceph-cluster:
          # renovate: depName="Ceph Cluster"
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        ceph-osd:
          # renovate: depName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: depName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
      kubernetes:
        kubernetes-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          datasource: Prometheus
        kubernetes-coredns:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          datasource: Prometheus
        kubernetes-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          datasource: Prometheus
        kubernetes-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          datasource: Prometheus
        kubernetes-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          datasource: Prometheus
        kubernetes-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          datasource: Prometheus
      unifi:
        unifi-insights:
          # renovate: depName="UniFi-Poller: Client Insights - Prometheus"
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        unifi-network-sites:
          # renovate: depName="UniFi-Poller: Network Sites - Prometheus"
          gnetId: 11311
          revision: 5
          datasource: Prometheus
        unifi-uap:
          # renovate: depName="UniFi-Poller: UAP Insights - Prometheus"
          gnetId: 11314
          revision: 10
          datasource: Prometheus
        unifi-usw:
          # renovate: depName="UniFi-Poller: USW Insights - Prometheus"
          gnetId: 11312
          revision: 9
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      # Plugins
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
      # Datasources
      - netdatacloud-netdata-datasource
      - pixie-pixie-datasource
      - grafana-googlesheets-datasource
      - grafana-mqtt-datasource
      - grafana-strava-datasource
      - grafana-github-datasource
      - isovalent-hubble-datasource
      - redis-datasource
      - https://github.com/VictoriaMetrics/victorialogs-datasource/releases/download/v0.10.0/victorialogs-datasource-v0.10.0.zip;victorialogs-datasource
      - https://github.com/VictoriaMetrics/victoriametrics-datasource/releases/download/v0.10.3/victoriametrics-datasource-v0.10.3.zip;victoriametrics-datasource
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      annotations:
        error-pages.home.arpa/enabled: "true"
        authentik.home.arpa/enabled: "true"
        gethomepage.dev/app: *app
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: "Grafana"
        gethomepage.dev/description: "The open and composable observability and data visualization platform"
        gethomepage.dev/href: "https://grafana.${SECRET_DOMAIN}"
        gethomepage.dev/group: "Kubernetes"
        gethomepage.dev/icon: "sh-grafana.png"
        # gethomepage.dev/widget.type: grafana
        # gethomepage.dev/widget.url: "https://grafana.${SECRET_DOMAIN}"
        # gethomepage.dev/widget.username: ""
        # gethomepage.dev/widget.password: ""
      ingressClassName: internal
      hosts:
        - &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
          secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      enabled: false
      # existingClaim: *app
    testFramework:
      enabled: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana
