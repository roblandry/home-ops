---
# yaml-language-server: $schema=https://crd.movishell.pl/source.toolkit.fluxcd.io/helmrepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: grafana
  namespace: monitor
spec:
  type: oci
  url: oci://ghcr.io/grafana/helm-charts
  interval: 1h
  timeout: 3m
---
# yaml-language-server: $schema=https://crd.movishell.pl/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  chart:
    spec:
      chart: grafana
      version: 8.14.2
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: monitor
  interval: 30m
  maxHistory: 3
  uninstall:
    keepHistory: false
  values:
    annotations:
      secret.reloader.stakater.com/reload: &secret grafana-secret
    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-init:16
        envFrom:
          - secretRef:
              name: *secret
    rbac:
      pspEnabled: false
    persistence:
      enabled: true
      storageClass: ceph-filesystem
      size: 15Gi
      accessModes:
        - ReadWriteMany
    testFramework:
      enabled: false
    imageRenderer:
      enabled: false
    serviceMonitor:
      enabled: true
    serviceAccount:
      autoMount: true
    initChownData:
      enabled: false
    ingress:
      enabled: true
      ingressClassName: internal
      annotations:
        # external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        error-pages.home.arpa/enabled: "true"
        authentik.home.arpa/enabled: "true"
        gethomepage.dev/app: "grafana"
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: "Grafana"
        gethomepage.dev/description: "The open and composable observability and data visualization platform"
        gethomepage.dev/href: "https://grafana.${SECRET_DOMAIN}"
        gethomepage.dev/group: "Kubernetes"
        gethomepage.dev/icon: "sh-grafana.png"
        # gethomepage.dev/widget.type: grafana
        # gethomepage.dev/widget.url: "https://grafana.${SECRET_DOMAIN}"
        # gethomepage.dev/widget.username: ""
        # gethomepage.dev/widget.password: ""
      hosts:
        - &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
          secretName: "${SECRET_DOMAIN/./-}-production-tls"
    env:
      GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: true
    envFromSecrets:
      - name: *secret
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth:
        disable_login_form: true
        disable_signout_menu: true
      auth.anonymous:
        enabled: true
        org_name: Main Org.
        org_role: Admin
      security:
        allow_embedding: true
        cookie_secure: true
        content_security_policy: true
        disable_gravatar: true
      log:
        mode: console
      news:
        news_feed_enabled: false
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      server:
        root_url: https://grafana.${SECRET_DOMAIN}
    plugins:
      - pr0ps-trackmap-panel
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - natel-plotly-panel
      - vonage-status-panel
      - https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-worldmap-panel-ng
      - redis-datasource
    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        initDatasources: true
        labelValue: ""
      dashboards:
        enabled: true
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        searchNamespace: ALL
        provider:
          disableDelete: true
          foldersFromFilesStructure: false
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitor.svc.cluster.local:10902/
            isDefault: true
            jsonData:
              timeInterval: 30s
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.monitor.svc.cluster.local
            jsonData:
              maxLines: 1000
          # - name: Alertmanager
          #   type: alertmanager
          #   access: proxy
          #   url: http://alertmanager.monitor.svc.cluster.local:9093
          #   jsonData:
          #     implementation: prometheus
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: "storage"
            disableDeletion: false
            editable: true
            folder: "Storage"
            options:
              path: /var/lib/grafana/dashboards/database
            orgId: 1
            type: file
          - name: "kubernetes"
            disableDeletion: false
            editable: true
            folder: "Kubernetes"
            options:
              path: /var/lib/grafana/dashboards/kubernetes
            orgId: 1
            type: file
          - name: "networking"
            disableDeletion: false
            editable: true
            folder: "Networking"
            options:
              path: /var/lib/grafana/dashboards/networking
            orgId: 1
            type: file
          - name: "system"
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            folder: "System"
            options:
              path: /var/lib/grafana/dashboards/system
              orgId: 1
              type: file
    dashboards:
      # K8S Dashboard EN 20250125 15661 rev2
      #
      kubernetes:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
          datasource: Prometheus
        coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 20
          datasource: Prometheus
        global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 35
          datasource: Prometheus
        pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: Prometheus
        volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
        nfd:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus
        spegel:
          # renovate: depName="Spegel"
          gnetId: 18089
          revision: 1
          datasource:
            - {name: DS_PROMETHEUS, value: Prometheus}
      networking:
        cert-manager:
          # renovate: depName="Cert-manager-Kubernetes"
          # url: https://raw.githubusercontent.com/szinn/k8s-homelab/main/kubernetes/main/apps/cert-manager/cert-manager/app/cert-manager-dashboard.json
          gnetId: 20842
          revision: 3
          datasource: Prometheus
        cilium-overview:
          # renovate: depName="Cilium v1.11 Hubble Metrics"
          gnetId: 15515
          revision: 1
          datasource: Prometheus
        cilium-hubble-flows:
          gnetId: 16966
          revision: 1
          datasource: Prometheus
        ingress-nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        ingress-nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
        # speedtest-exporter-hub:  # -- I Dont use this -- #
        #   # renovate: depName="Speedtest-Exporter"
        #   gnetId: 13665
        #   revision: 4
        #   datasource:
        #     - {name: DS_PROMETHEUS, value: Prometheus}
        external-dns:
          # renovate: depName="External-DNS"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        unifi-client-dpi:
          # renovate: depName="UniFi-Poller: Client DPI - Prometheus"
          gnetId: 11310
          revision: 5
          datasource: Prometheus
        unifi-usw-insights:
          # renovate: depName="UniFi-Poller: USW Insights - Prometheus"
          gnetId: 11312
          revision: 9
          datasource: Prometheus
        unifi-usg-insights:
          # renovate: depName="UniFi-Poller: USG Insights - Prometheus"
          gnetId: 11313
          revision: 9
          datasource: Prometheus
        unifi-uap-insights:
          # renovate: depName="UniFi-Poller: UAP Insights - Prometheus"
          gnetId: 11314
          revision: 10
          datasource: Prometheus
        unifi-client-insights:
          # renovate: depName="UniFi-Poller: Client Insights - Prometheus"
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        # traefik:
        #   # renovate: depName="Traefik"
        #   gnetId: 17346
        #   revision: 9
        #   datasource: Prometheus
        # haproxy:  # -- I Dont use this -- #
        #   # renovate: depName="HAProxy"
        #   gnetId: 12693
        #   revision: 8
        #   datasource: Prometheus
      storage:
        # minio-dashboard:  # -- I Dont use this -- #
        #   # renovate: depName="Minio"
        #   gnetId: 13502
        #   revision: 26
        #   datasource:
        #     - {name: DS_PROMETHEUS, value: Prometheus}
        # smartctl:  # -- I Dont use this -- #
        #   # renovate: depname="Smartctl"
        #   gnetId: 22604
        #   revision: 2
        #   datasource:
        #     - {name: DS_PROMETHEUS, value: Prometheus}
        # zfs:  # -- I Dont use this -- #
        #   # renovate: depName="ZFS"
        #   gnetId: 7845
        #   revision: 4
        #   datasource: Prometheus
        openebs:
          # renovate: depName="1 OpenEBS Dashboard"
          gnetID: 12171
          revision: 2
          datasource: Prometheus
        volsync:  # -- This app isnt quite working -- #
          # renovate: depName="Volsync"
          gnetId: 21356
          revision: 3
          datasource:
            - {name: DS_PROMETHEUS, value: Prometheus}
            - {name: VAR_REPLICATIONDESTNAME, value: ".*-rdst"}
      system:
        node-exporter:  # -- I Dont use this -- #
          # renovate: depName="Node Exporter"
          gnetId: 11074
          revision: 9
          datasource: Prometheus
        node-exporter-full:  # -- I Dont use this -- #
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 37
          datasource: Prometheus
        # nut:  # -- I Dont use this -- #
        #   # renovate: depName="NUT"
        #   gnetId: 15406
        #   revision: 2
        #   datasource:
        #     - {name: DS_GRAFANACLOUD-DENYAGO-PROM, value: Prometheus}
