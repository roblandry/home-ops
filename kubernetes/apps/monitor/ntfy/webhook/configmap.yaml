---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.33.1/configmap.json
apiVersion: v1
kind: ConfigMap
metadata:
  name: ntfy-webhook-code
  namespace: monitor
data:
  startup.sh: |
    #!/bin/sh
    set -e

    echo "Installing Python dependencies..."
    pip install --no-cache-dir --prefix=/tmp/.python flask jinja2 requests

    echo "Detecting Python version..."
    PYTHON_VERSION=$(python -c "import sys; print(f'python{sys.version_info.major}.{sys.version_info.minor}')")

    echo "Python version is $PYTHON_VERSION"
    export PYTHONPATH="/tmp/.python/lib/$PYTHON_VERSION/site-packages"

    echo "Running ntfy webhook relay..."
    exec python /app/webhook.py
  webhook.py: |
    from flask import Flask, request
    import requests
    from jinja2 import Environment, FileSystemLoader
    import os

    NTFY_TOKEN = os.getenv("NTFY_TOKEN")

    app = Flask(__name__)
    env = Environment(loader=FileSystemLoader("/app/templates"))

    NTFY_BASE_URL = os.getenv("NTFY_BASE_URL", "https://ntfy.sh")

    def get_status_tag(status):
        return {
            "firing": "warning",
            "resolved": "white_check_mark"
        }.get(status.lower(), "information_source")

    @app.route("/webhook", methods=["POST"])
    def alertmanager_webhook():
        data = request.json
        status = data.get("status", "unknown").lower()
        alerts = data.get("alerts", [])

        for alert in alerts:
            title = f"[{status.upper()}] {alert['labels'].get('alertname', 'Unknown')}"
            tag = get_status_tag(status)

            tmpl = env.get_template("ntfy_message.j2")
            message = tmpl.render(alert=alert)

            headers = {
                "Title": title,
                "Tags": tag,
                "Authorization": f"Bearer {NTFY_TOKEN}",
            }

            if alert.get("generatorURL"):
              headers["Click"] = alert["generatorURL"]

            print("==== Outbound alert ====")
            print("POST", NTFY_BASE_URL)
            print("Title:", title)
            print("Tags:", tag)
            print("Message:", message)
            print("Headers:", headers)

            requests.post(NTFY_BASE_URL, headers=headers, data=message)

        return "ok", 200
    if __name__ == "__main__":
      print("‚úÖ ntfy webhook relay starting...")
      app.run(host="0.0.0.0", port=5000)
  ntfy_message.j2: |
    {% set labels = alert.labels %}
    {% set annotations = alert.annotations %}
    ‚ö†Ô∏è {{ annotations.summary or annotations.description or "No summary provided." }}

    {% if annotations.message -%}
    üìù Message: {{ annotations.message }}
    {%- endif %}
    üîé Details
    - Alertname: {{ labels.alertname }}
    - Severity: {{ labels.severity }}
    - Instance: {{ labels.instance or "n/a" }}
    - Job: {{ labels.job or "n/a" }}
    - Namespace: {{ labels.namespace or "n/a" }}
    - Pod: {{ labels.pod or "n/a" }}
    - Node: {{ labels.node or "n/a" }}

    üïí Starts At: {{ alert.startsAt }}
    {% if alert.endsAt -%}üü¢ Ends At: {{ alert.endsAt }}{%- endif %}

