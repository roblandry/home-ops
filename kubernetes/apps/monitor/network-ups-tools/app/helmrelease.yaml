---
  # yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/tags/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app network-ups-tools
  namespace: &namespace monitor
spec:

  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      network-ups-tools:
        # annotations:
        #   reloader.stakater.com/auto: "true"
        #   secret.reloader.stakater.com/reload: &secret network-ups-tools-secret
        strategy: RollingUpdate
        containers:
          network-ups-tools:
            image:
              repository: untouchedwagons/network-ups-tools
              tag: 1.0.0@sha256:672410b7cefcb15f443663f3e1338bb9a9a02e1510348daed1cc97afde61e18c
            env:
              TZ: ${CONFIG_TIMEZONE}
            # envFrom:
            #   - secretRef:
            #       name: *secret
            securityContext:
              privileged: true
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
          # exporter:
          #   image:
          #     repository: ghcr.io/druggeri/nut_exporter
          #     tag: 3.2.0

        pod:
          annotations:
            configmap.reloader.stakater.com/reload: *app

    service:
      network-ups-tools:
        controller: *app
        # type: LoadBalancer
        # annotations:
        #   external-dns.alpha.kubernetes.io/hostname: ${HOSTNAME}.jory.dev
        #   lbipam.cilium.io/ips: ${NUT_SERVICE_IP}, ::ffff:${NUT_SERVICE_IP}
        # externalTrafficPolicy: Cluster
        ports:
          http:
            port: 3493
            protocol: TCP
      # metrics:
      #   enabled: true
      #   controller: *app
      #   ports:
      #     metrics:
      #       enabled: true
      #       port: 9199
      #       protocol: TCP

    # serviceMonitor:
    #   network-ups-tools:
    #     serviceName: network-ups-tools-metrics
    #     endpoints:
    #       - port: metrics
    #         scheme: http
    #         interval: 15s
    #         scrapeTimeout: 10s
    #         path: /ups_metrics
    #         params:
    #           target:
    #             - localhost:3493
    #         relabelings:
    #           - sourceLabels: [__param_target]
    #             targetLabel: target

    persistence:
      config:
        type: configMap
        name: network-ups-tools-config
        defaultMode: 0400
        globalMounts:
          - path: /etc/nut
      runtime:
        type: emptyDir
        advancedMounts:
          network-ups-tools:
            network-ups-tools:
              - path: /run/nut

      # ups:
      #   type: hostPath
      #   hostPath: /dev/bus/usb/001/002
      #   globalMounts:
      #     - path: /dev/bus/usb/001/001
      #       readOnly: false

    configMaps:
      config:
        enabled: true
        data:
          # nut.conf: |-
          #   MODE=netserver
          # upsd.conf: |-
          #   MAXAGE 20
          #   LISTEN 0.0.0.0
          upsd.users: |-
            [upsmon]
              password  = "bacon"
              actions = SET
              instcmds = ALL
              upsmon master
          ups.conf: |-
            [netups]
              driver = "snmp-ups"
              port = "net.ups.internal"
              community = "public"
              mibs = apcc
              desc = "APC Smart-UPS 1500"
          # upsmon.conf: |-
          #   MONITOR ups@localhost:3493 1 upsmon "bacon" master
          #   SHUTDOWNCMD "/sbin/shutdown -h +0"
          #   POWERDOWNFLAG /etc/killpower
          #   POLLFREQ 15
          #   POLLFREQALERT 5
          #   HOSTSYNC 15
