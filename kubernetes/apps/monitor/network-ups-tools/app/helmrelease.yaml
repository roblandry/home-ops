---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/tags/app-template-3.7.3/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app network-ups-tools
  namespace: &namespace monitor
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      network-ups-tools:
        # annotations:
        #   reloader.stakater.com/auto: "true"
        #   secret.reloader.stakater.com/reload: &secret network-ups-tools-secret
        strategy: RollingUpdate
        serviceAccount:
          create: false
          name: nut-master-labeler
        containers:
          network-ups-tools:
            image:
              repository: untouchedwagons/network-ups-tools
              tag: 1.0.0@sha256:672410b7cefcb15f443663f3e1338bb9a9a02e1510348daed1cc97afde61e18c
            env:
              - name: TZ
                value: ${CONFIG_TIMEZONE}
              - name: NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
            # envFrom:
            #   - secretRef:
            #       name: *secret
            lifecycle:
              postStart:
                exec:
                  command:
                    - sh
                    - -c
                    - |
                      apk add --no-cache curl jq
                      TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
                      CA=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                      API=https://kubernetes.default.svc
                      NODE=$(echo $NODE_NAME)

                      # Remove label from ALL nodes
                      for n in $(curl -s --cacert $CA -H "Authorization: Bearer $TOKEN" $API/api/v1/nodes | jq -r '.items[].metadata.name'); do
                        curl -s -X PATCH --header "Authorization: Bearer $TOKEN" \
                          -H "Content-Type: application/merge-patch+json" \
                          --cacert $CA \
                          --data '{"metadata":{"labels":{"nut-master":null}}}' \
                          $API/api/v1/nodes/$n
                      done

                      # Set label only on current node
                      curl -s -X PATCH --header "Authorization: Bearer $TOKEN" \
                        -H "Content-Type: application/merge-patch+json" \
                        --cacert $CA \
                        --data '{"metadata":{"labels":{"nut-master":"true"}}}' \
                        $API/api/v1/nodes/$NODE
            securityContext:
              privileged: true
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true

          exporter:
            image:
              repository: ghcr.io/druggeri/nut_exporter
              tag: 3.2.0

        pod:
          annotations:
            configmap.reloader.stakater.com/reload: *app

      # Added for unRAID NUT
      nut-exporter-unraid:
        containers:
          nut-exporter-unraid:
            image:
              repository: ghcr.io/druggeri/nut_exporter
              tag: 3.2.0
            env:
              NUT_EXPORTER_SERVER: zeus.nas.internal
              NUT_EXPORTER_USERNAME: monuser
              NUT_EXPORTER_PASSWORD: bacon
        pod:
          labels:
            app.kubernetes.io/component: nut-exporter-unraid

    service:
      network-ups-tools:
        controller: *app
        # type: LoadBalancer
        # annotations:
        #   external-dns.alpha.kubernetes.io/hostname: ${HOSTNAME}.jory.dev
        #   lbipam.cilium.io/ips: ${NUT_SERVICE_IP}, ::ffff:${NUT_SERVICE_IP}
        # externalTrafficPolicy: Cluster
        ports:
          http:
            port: 3493
            protocol: TCP

      metrics:
        enabled: true
        controller: *app
        ports:
          metrics:
            enabled: true
            port: 9199
            protocol: TCP

      # Added for unRAID NUT
      metrics-unraid:
        controller: nut-exporter-unraid
        ports:
          metrics:
            enabled: true
            port: 9199
            protocol: TCP

    serviceMonitor:
      network-ups-tools:
        serviceName: network-ups-tools-metrics
        endpoints:
          - port: metrics
            scheme: http
            interval: 15s
            scrapeTimeout: 10s
            path: /ups_metrics
            params:
              target:
                - localhost:3493
            relabelings:
              - sourceLabels: [__param_target]
                targetLabel: target
              - sourceLabels: [__param_target]
                targetLabel: instance
                replacement: net.ups.internal

      # Added for unRAID NUT
      nut-exporter-unraid:
        serviceName: network-ups-tools-metrics-unraid
        endpoints:
          - port: metrics
            path: /ups_metrics
            interval: 15s
            scrapeTimeout: 10s
            params:
              target:
                - zeus.nas.internal:3493
            relabelings:
              - sourceLabels: [__param_target]
                targetLabel: target
              - sourceLabels: [__param_target]
                targetLabel: instance
                replacement: svr.ups.internal

    persistence:
      config:
        type: configMap
        name: network-ups-tools-config
        advancedMounts:
          network-ups-tools:
            network-ups-tools:
              - path: /etc/nut

    configMaps:
      config:
        enabled: true
        data:
          nut.conf: |-
            MODE=netserver
          upsd.conf: |-
            MAXAGE 20
            LISTEN 0.0.0.0
          upsd.users: |-
            [upsmon]
              password  = "bacon"
              actions = SET
              instcmds = ALL
              upsmon master
          ups.conf: |-
            [netups]
              driver = "snmp-ups"
              port = "net.ups.internal"
              community = "public"
              mibs = apcc
              desc = "APC Smart-UPS 1500"
          upsmon.conf: |-
            MONITOR netups@localhost:3493 1 upsmon "bacon" master
            SHUTDOWNCMD "/sbin/shutdown -h +0"
            POWERDOWNFLAG /etc/killpower
            POLLFREQ 15
            POLLFREQALERT 5
            HOSTSYNC 15
